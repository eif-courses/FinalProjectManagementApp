// components/templates/commission_management.templ
package templates

import (
	"FinalProjectManagementApp/auth"
	"FinalProjectManagementApp/database"
	"fmt"
	"time"
)

type CommissionManagementData struct {
	AccessCodes   []database.CommissionMember
	StudyPrograms []string
	CurrentYear   int
	Department    string
}

templ CommissionManagement(user *auth.AuthenticatedUser, locale string, data CommissionManagementData) {
	@Layout(user, locale, "Commission Access Management") {
		<div class="max-w-6xl mx-auto space-y-6">
			<div class="flex justify-between items-center">
				<h1 class="text-2xl font-bold">Commission Access Tokens</h1>
				<div class="text-sm text-gray-600">
					Department: { data.Department }
				</div>
			</div>

			<!-- Simple Create Form -->
			<div class="bg-white rounded-lg shadow p-6">
				<h2 class="text-lg font-semibold mb-4">Generate New Access Token</h2>

				<form hx-post="/admin/commission/create"
					  hx-target="#access-codes-list"
					  hx-swap="afterbegin"
					  class="space-y-4">

					<div class="grid grid-cols-1 md:grid-cols-3 gap-4">
						<div>
							<label class="block text-sm font-medium mb-1">Study Program</label>
							<select name="study_program" required class="w-full border rounded-md px-3 py-2">
								<option value="">Select Program</option>
								for _, program := range data.StudyPrograms {
									<option value={ program }>{ program }</option>
								}
							</select>
						</div>

						<div>
							<label class="block text-sm font-medium mb-1">Max Uses</label>
							<input type="number" name="max_access" value="100" min="0"
								   class="w-full border rounded-md px-3 py-2"
								   placeholder="0 for unlimited"/>
						</div>

						<div>
							<label class="block text-sm font-medium mb-1">Valid Days</label>
							<input type="number" name="duration_days" value="30" min="1" max="365"
								   required class="w-full border rounded-md px-3 py-2"/>
						</div>
					</div>

					<button type="submit"
							class="bg-blue-600 text-white px-6 py-2 rounded-md hover:bg-blue-700">
						Generate Token
					</button>
				</form>
			</div>

			<!-- Active Tokens -->
			<div class="bg-white rounded-lg shadow p-6">
				<h2 class="text-lg font-semibold mb-4">Active Access Tokens</h2>

				<div class="overflow-x-auto">
					<table class="min-w-full divide-y divide-gray-200">
						<thead>
							<tr>
								<th class="px-4 py-2 text-left text-sm font-medium text-gray-500">Program</th>
								<th class="px-4 py-2 text-left text-sm font-medium text-gray-500">Access Link</th>
								<th class="px-4 py-2 text-left text-sm font-medium text-gray-500">Expires</th>
								<th class="px-4 py-2 text-left text-sm font-medium text-gray-500">Uses</th>
								<th class="px-4 py-2 text-left text-sm font-medium text-gray-500">Actions</th>
							</tr>
						</thead>
						<tbody id="access-codes-list" class="divide-y divide-gray-200">
							for _, code := range data.AccessCodes {
								@SimpleAccessCodeRow(&code, locale)
							}
						</tbody>
					</table>
				</div>
			</div>
		</div>

		<script>
			// Use event delegation for copy buttons
			document.addEventListener('click', function(e) {
				if (e.target.classList.contains('copy-btn') || e.target.parentElement.classList.contains('copy-btn')) {
					const btn = e.target.classList.contains('copy-btn') ? e.target : e.target.parentElement;
					const code = btn.getAttribute('data-code');
					const url = window.location.origin + '/commission/' + code;

					navigator.clipboard.writeText(url).then(function() {
						const originalText = btn.textContent;
						btn.textContent = '✓ Copied!';
						btn.classList.add('text-green-600');
						btn.classList.remove('text-blue-600');

						setTimeout(() => {
							btn.textContent = originalText;
							btn.classList.remove('text-green-600');
							btn.classList.add('text-blue-600');
						}, 2000);
					}).catch(function(err) {
						alert('Failed to copy: ' + err);
					});
				}
			});
		</script>
	}
}

templ SimpleAccessCodeRow(member *database.CommissionMember, locale string) {
	<tr>
		<td class="px-4 py-3 text-sm">
			{ member.StudyProgram.String }
		</td>
		<td class="px-4 py-3">
			<div class="flex items-center space-x-2">
				<code class="text-xs bg-gray-100 px-2 py-1 rounded font-mono">
					{ fmt.Sprintf("%s/commission/%s", "https://finalprojectmanagementapp-production.up.railway.app", member.AccessCode) }
				</code>
				<button
					type="button"
					data-code={ member.AccessCode }
					class="copy-btn text-blue-600 hover:text-blue-800 text-sm cursor-pointer">
					Copy
				</button>
			</div>
		</td>
		<td class="px-4 py-3 text-sm">
			{ time.Unix(member.ExpiresAt, 0).Format("Jan 2, 2006") }
			if time.Now().Unix() > member.ExpiresAt {
				<span class="ml-2 text-xs text-red-600 font-medium">Expired</span>
			}
		</td>
		<td class="px-4 py-3 text-sm">
			{ fmt.Sprintf("%d", member.AccessCount) }
			if member.MaxAccess > 0 {
				/ { fmt.Sprintf("%d", member.MaxAccess) }
			} else {
				<span class="text-gray-500">/ ∞</span>
			}
		</td>
		<td class="px-4 py-3">
			<button hx-delete={ fmt.Sprintf("/admin/commission/%s", member.AccessCode) }
					hx-confirm="Delete this access token?"
					hx-target="closest tr"
					hx-swap="outerHTML"
					class="text-red-600 hover:text-red-800 text-sm">
				Delete
			</button>
		</td>
	</tr>
}

