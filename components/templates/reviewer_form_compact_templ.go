// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.865
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"FinalProjectManagementApp/components/button"
	"FinalProjectManagementApp/components/form"
	"FinalProjectManagementApp/components/icon"
	"FinalProjectManagementApp/components/input"
	"FinalProjectManagementApp/components/modal"
	"FinalProjectManagementApp/components/textarea"
	"FinalProjectManagementApp/database"
	"fmt"
)

func CompactReviewerForm(props database.ReviewerReportFormProps, formData *database.ReviewerReportFormData) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Var3 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
				templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
				templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
				if !templ_7745c5c3_IsBuffer {
					defer func() {
						templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
						if templ_7745c5c3_Err == nil {
							templ_7745c5c3_Err = templ_7745c5c3_BufErr
						}
					}()
				}
				ctx = templ.InitializeContext(ctx)
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"relative px-6 py-2 border-b\"><button onclick=\"closeReviewerModal()\" class=\"absolute top-2 right-4 text-gray-500 hover:text-gray-700 text-xl font-bold\">×</button><div class=\"text-center pr-8\"><h2 class=\"text-lg font-bold text-gray-900 dark:text-white\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				if props.FormVariant == "en" {
					if props.IsReadOnly {
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "THESIS REVIEW (VIEW ONLY)")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
					} else {
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "THESIS REVIEW")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
					}
				} else {
					if props.IsReadOnly {
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "BAIGIAMOJO DARBO RECENZIJA (PERŽIŪRA)")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
					} else {
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "BAIGIAMOJO DARBO RECENZIJA")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
					}
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "</h2></div></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				return nil
			})
			templ_7745c5c3_Err = modal.Header().Render(templ.WithChildren(ctx, templ_7745c5c3_Var3), templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Var4 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
				templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
				templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
				if !templ_7745c5c3_IsBuffer {
					defer func() {
						templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
						if templ_7745c5c3_Err == nil {
							templ_7745c5c3_Err = templ_7745c5c3_BufErr
						}
					}()
				}
				ctx = templ.InitializeContext(ctx)
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "<div class=\"px-6 py-3\" style=\"max-height: calc(90vh - 120px); overflow-y: auto;\"><!-- Auto-save indicator -->")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				if !props.IsReadOnly {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "<div class=\"flex items-center justify-between mb-3\"><div id=\"auto-save-status\" class=\"text-sm text-gray-500 flex items-center gap-2\"><span id=\"save-icon\" class=\"hidden\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = icon.Save(icon.Props{Size: 14}).Render(ctx, templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "</span> <span id=\"save-text\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					if props.FormVariant == "en" {
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "Auto-save enabled")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
					} else {
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, "Automatinis išsaugojimas įjungtas")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, "</span></div><div class=\"text-xs text-gray-400\"><span id=\"last-saved\"></span></div></div>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				if !props.IsReadOnly {
					if props.AccessToken != "" {
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, "<form id=\"compact-reviewer-form\" hx-post=\"")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						var templ_7745c5c3_Var5 string
						templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("/reviewer/%s/student/%d/review/submit", props.AccessToken, props.StudentRecord.ID))
						if templ_7745c5c3_Err != nil {
							return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/templates/reviewer_form_compact.templ`, Line: 68, Col: 133}
						}
						_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 15, "\" hx-target=\"#reviewer-modal\" hx-swap=\"outerHTML\" class=\"space-y-4\" data-student-id=\"")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						var templ_7745c5c3_Var6 string
						templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", props.StudentRecord.ID))
						if templ_7745c5c3_Err != nil {
							return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/templates/reviewer_form_compact.templ`, Line: 72, Col: 87}
						}
						_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 16, "\" data-access-token=\"")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						var templ_7745c5c3_Var7 string
						templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(props.AccessToken)
						if templ_7745c5c3_Err != nil {
							return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/templates/reviewer_form_compact.templ`, Line: 73, Col: 65}
						}
						_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 17, "\">")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						templ_7745c5c3_Err = formContent(props, formData).Render(ctx, templ_7745c5c3_Buffer)
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 18, "</form>")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
					} else {
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 19, "<form id=\"compact-reviewer-form\" hx-post=\"")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						var templ_7745c5c3_Var8 string
						templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("/reviewer-report/%d/submit", props.StudentRecord.ID))
						if templ_7745c5c3_Err != nil {
							return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/templates/reviewer_form_compact.templ`, Line: 80, Col: 103}
						}
						_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 20, "\" hx-target=\"#reviewer-modal\" hx-swap=\"outerHTML\" class=\"space-y-4\" data-student-id=\"")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						var templ_7745c5c3_Var9 string
						templ_7745c5c3_Var9, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", props.StudentRecord.ID))
						if templ_7745c5c3_Err != nil {
							return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/templates/reviewer_form_compact.templ`, Line: 84, Col: 87}
						}
						_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var9))
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 21, "\" data-access-token=\"")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						var templ_7745c5c3_Var10 string
						templ_7745c5c3_Var10, templ_7745c5c3_Err = templ.JoinStringErrs(props.AccessToken)
						if templ_7745c5c3_Err != nil {
							return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/templates/reviewer_form_compact.templ`, Line: 85, Col: 65}
						}
						_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var10))
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 22, "\">")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						templ_7745c5c3_Err = formContent(props, formData).Render(ctx, templ_7745c5c3_Buffer)
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 23, "</form>")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
					}
				} else {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 24, "<form id=\"compact-reviewer-form\" class=\"space-y-4\" data-student-id=\"")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var11 string
					templ_7745c5c3_Var11, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", props.StudentRecord.ID))
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/templates/reviewer_form_compact.templ`, Line: 94, Col: 83}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var11))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 25, "\" data-access-token=\"")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var12 string
					templ_7745c5c3_Var12, templ_7745c5c3_Err = templ.JoinStringErrs(props.AccessToken)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/templates/reviewer_form_compact.templ`, Line: 95, Col: 61}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var12))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 26, "\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = formContent(props, formData).Render(ctx, templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 27, "</form>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 28, "<div id=\"modal-result\" class=\"mt-3\"></div></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				return nil
			})
			templ_7745c5c3_Err = modal.Body().Render(templ.WithChildren(ctx, templ_7745c5c3_Var4), templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 29, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Var13 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
				templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
				templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
				if !templ_7745c5c3_IsBuffer {
					defer func() {
						templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
						if templ_7745c5c3_Err == nil {
							templ_7745c5c3_Err = templ_7745c5c3_BufErr
						}
					}()
				}
				ctx = templ.InitializeContext(ctx)
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 30, "<div class=\"border-t pt-2 px-6 pb-2\"><div class=\"flex flex-wrap justify-end gap-2\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Var14 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
					templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
					templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
					if !templ_7745c5c3_IsBuffer {
						defer func() {
							templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
							if templ_7745c5c3_Err == nil {
								templ_7745c5c3_Err = templ_7745c5c3_BufErr
							}
						}()
					}
					ctx = templ.InitializeContext(ctx)
					templ_7745c5c3_Var15 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
						templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
						templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
						if !templ_7745c5c3_IsBuffer {
							defer func() {
								templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
								if templ_7745c5c3_Err == nil {
									templ_7745c5c3_Err = templ_7745c5c3_BufErr
								}
							}()
						}
						ctx = templ.InitializeContext(ctx)
						if props.FormVariant == "en" {
							templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 31, "Close")
							if templ_7745c5c3_Err != nil {
								return templ_7745c5c3_Err
							}
						} else {
							templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 32, "Uždaryti")
							if templ_7745c5c3_Err != nil {
								return templ_7745c5c3_Err
							}
						}
						return nil
					})
					templ_7745c5c3_Err = button.Button(button.Props{
						Variant: button.VariantGhost,
						Class:   "h-9 px-4 text-sm",
					}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var15), templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					return nil
				})
				templ_7745c5c3_Err = modal.Close(modal.CloseProps{ModalID: "reviewer-modal"}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var14), templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				if !props.IsReadOnly {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 33, "<!-- Save as Draft button --> ")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Var16 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
						templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
						templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
						if !templ_7745c5c3_IsBuffer {
							defer func() {
								templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
								if templ_7745c5c3_Err == nil {
									templ_7745c5c3_Err = templ_7745c5c3_BufErr
								}
							}()
						}
						ctx = templ.InitializeContext(ctx)
						templ_7745c5c3_Err = icon.Save(icon.Props{Size: 14}).Render(ctx, templ_7745c5c3_Buffer)
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 34, " <span class=\"ml-1\">")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						if props.FormVariant == "en" {
							templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 35, "Save Draft")
							if templ_7745c5c3_Err != nil {
								return templ_7745c5c3_Err
							}
						} else {
							templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 36, "Išsaugoti juodraštį")
							if templ_7745c5c3_Err != nil {
								return templ_7745c5c3_Err
							}
						}
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 37, "</span>")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						return nil
					})
					templ_7745c5c3_Err = button.Button(button.Props{
						Variant: button.VariantOutline,
						Class:   "h-9 px-4 text-sm",
						Attributes: templ.Attributes{
							"onclick": "reviewerSaveDraft()",
						},
					}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var16), templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 38, " <!-- Submit button --> ")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Var17 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
						templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
						templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
						if !templ_7745c5c3_IsBuffer {
							defer func() {
								templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
								if templ_7745c5c3_Err == nil {
									templ_7745c5c3_Err = templ_7745c5c3_BufErr
								}
							}()
						}
						ctx = templ.InitializeContext(ctx)
						if props.FormVariant == "en" {
							templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 39, "💾 Submit & Sign")
							if templ_7745c5c3_Err != nil {
								return templ_7745c5c3_Err
							}
						} else {
							templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 40, "💾 Pateikti ir pasirašyti")
							if templ_7745c5c3_Err != nil {
								return templ_7745c5c3_Err
							}
						}
						return nil
					})
					templ_7745c5c3_Err = button.Button(button.Props{
						Type:    button.TypeSubmit,
						Variant: button.VariantSecondary,
						Class:   "h-9 px-4 text-sm",
						Attributes: templ.Attributes{
							"form":    "compact-reviewer-form",
							"onclick": "return reviewerValidateAndSubmit()",
						},
					}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var17), templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 41, "</div></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				return nil
			})
			templ_7745c5c3_Err = modal.Footer().Render(templ.WithChildren(ctx, templ_7745c5c3_Var13), templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = modal.Modal(modal.Props{ID: "reviewer-modal", Class: "w-[95vw] max-w-4xl mx-auto my-2"}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = ReviewerModalScripts(props.AccessToken, props.IsReadOnly).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func formContent(props database.ReviewerReportFormProps, formData *database.ReviewerReportFormData) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var18 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var18 == nil {
			templ_7745c5c3_Var18 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 42, "<!-- Add hidden field to track if this is a draft --><input type=\"hidden\" name=\"is_draft\" id=\"is_draft\" value=\"false\"><!-- Add style for read-only textareas -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if props.IsReadOnly {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 43, "<style>\r\n         textarea[disabled] {\r\n             resize: none !important;\r\n             overflow: hidden !important;\r\n             background-color: transparent !important;\r\n             border: 1px solid transparent !important;\r\n             padding: 0.5rem !important;\r\n             min-height: 1.5rem !important;\r\n             height: auto !important;\r\n             white-space: pre-wrap !important;\r\n             word-wrap: break-word !important;\r\n             line-height: 1.5 !important;\r\n             font-family: inherit !important;\r\n             font-size: inherit !important;\r\n         }\r\n         textarea[disabled]:focus {\r\n             outline: none !important;\r\n             box-shadow: none !important;\r\n             border-color: transparent !important;\r\n         }\r\n         /* Remove any conflicting styles from the templUI component */\r\n         textarea[disabled][data-textarea] {\r\n             min-height: 1.5rem !important;\r\n         }\r\n     </style>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 44, "<!-- Compact Header Info --><div class=\"bg-gray-50 dark:bg-gray-800 rounded p-3 space-y-2 text-sm\"><div><span class=\"font-medium\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if props.FormVariant == "en" {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 45, "Title:")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 46, "Tema:")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 47, "</span> <span class=\"ml-2\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var19 string
		templ_7745c5c3_Var19, templ_7745c5c3_Err = templ.JoinStringErrs(props.StudentRecord.GetLocalizedTitle(props.FormVariant))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/templates/reviewer_form_compact.templ`, Line: 204, Col: 89}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var19))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 48, "</span></div><div><span class=\"font-medium\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if props.FormVariant == "en" {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 49, "Author:")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 50, "Autorius:")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 51, "</span> <span class=\"ml-2\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var20 string
		templ_7745c5c3_Var20, templ_7745c5c3_Err = templ.JoinStringErrs(props.StudentRecord.GetFullName())
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/templates/reviewer_form_compact.templ`, Line: 214, Col: 66}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var20))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 52, "</span></div></div><!-- Reviewer Info using Form components -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var21 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Var22 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
				templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
				templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
				if !templ_7745c5c3_IsBuffer {
					defer func() {
						templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
						if templ_7745c5c3_Err == nil {
							templ_7745c5c3_Err = templ_7745c5c3_BufErr
						}
					}()
				}
				ctx = templ.InitializeContext(ctx)
				if props.FormVariant == "en" {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 53, "Reviewer Details")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				} else {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 54, "Recenzento duomenys")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 55, " ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				if !props.IsReadOnly {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 56, "<span class=\"text-red-500 ml-1\">*</span>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				return nil
			})
			templ_7745c5c3_Err = form.Label(form.LabelProps{
				For: "reviewer_personal_details",
			}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var22), templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 57, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = textarea.Textarea(textarea.Props{
				ID:          "reviewer_personal_details",
				Name:        "reviewer_personal_details",
				Value:       formData.ReviewerPersonalDetails,
				Required:    !props.IsReadOnly,
				Class:       getTextareaClass(props.IsReadOnly),
				Rows:        getTextareaRowsSmall(props.IsReadOnly),
				Placeholder: getReviewerPlaceholder(props.FormVariant),
				Disabled:    props.IsReadOnly,
				AutoResize:  !props.IsReadOnly,
			}).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 58, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if !props.IsReadOnly {
				templ_7745c5c3_Var23 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
					templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
					templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
					if !templ_7745c5c3_IsBuffer {
						defer func() {
							templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
							if templ_7745c5c3_Err == nil {
								templ_7745c5c3_Err = templ_7745c5c3_BufErr
							}
						}()
					}
					ctx = templ.InitializeContext(ctx)
					if props.FormVariant == "en" {
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 59, "Include name, workplace, position, and academic titles")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
					} else {
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 60, "Įtraukite vardą, darbovietę, pareigas ir akademinius titulus")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
					}
					return nil
				})
				templ_7745c5c3_Err = form.Description().Render(templ.WithChildren(ctx, templ_7745c5c3_Var23), templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			return nil
		})
		templ_7745c5c3_Err = form.Item().Render(templ.WithChildren(ctx, templ_7745c5c3_Var21), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 61, "<!-- Review Sections --><div class=\"space-y-3\"><!-- Section 1-3 --><div class=\"border rounded-lg p-3 space-y-3\"><!-- Goals -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var24 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Var25 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
				templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
				templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
				if !templ_7745c5c3_IsBuffer {
					defer func() {
						templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
						if templ_7745c5c3_Err == nil {
							templ_7745c5c3_Err = templ_7745c5c3_BufErr
						}
					}()
				}
				ctx = templ.InitializeContext(ctx)
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 62, "<span class=\"text-blue-600\">1.</span> ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				if props.FormVariant == "en" {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 63, "Goals & Tasks")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				} else {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 64, "Tikslai ir uždaviniai")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 65, " ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				if !props.IsReadOnly {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 66, "<span class=\"text-red-500\">*</span>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				return nil
			})
			templ_7745c5c3_Err = form.Label(form.LabelProps{
				For:   "review_goals",
				Class: "flex items-center gap-1",
			}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var25), templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 67, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = textarea.Textarea(textarea.Props{
				ID:          "review_goals",
				Name:        "review_goals",
				Value:       formData.ReviewGoals,
				Required:    !props.IsReadOnly,
				Class:       getTextareaClass(props.IsReadOnly),
				Rows:        getTextareaRowsLarge(props.IsReadOnly),
				Placeholder: getGoalsPlaceholder(props.FormVariant),
				Disabled:    props.IsReadOnly,
				AutoResize:  !props.IsReadOnly,
			}).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = form.Item().Render(templ.WithChildren(ctx, templ_7745c5c3_Var24), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 68, "<!-- Theory -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var26 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Var27 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
				templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
				templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
				if !templ_7745c5c3_IsBuffer {
					defer func() {
						templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
						if templ_7745c5c3_Err == nil {
							templ_7745c5c3_Err = templ_7745c5c3_BufErr
						}
					}()
				}
				ctx = templ.InitializeContext(ctx)
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 69, "<span class=\"text-blue-600\">2.</span> ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				if props.FormVariant == "en" {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 70, "Theory")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				} else {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 71, "Teorija")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 72, " ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				if !props.IsReadOnly {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 73, "<span class=\"text-red-500\">*</span>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				return nil
			})
			templ_7745c5c3_Err = form.Label(form.LabelProps{
				For:   "review_theory",
				Class: "flex items-center gap-1",
			}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var27), templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 74, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = textarea.Textarea(textarea.Props{
				ID:          "review_theory",
				Name:        "review_theory",
				Value:       formData.ReviewTheory,
				Required:    !props.IsReadOnly,
				Class:       getTextareaClass(props.IsReadOnly),
				Rows:        getTextareaRowsLarge(props.IsReadOnly),
				Placeholder: getTheoryPlaceholder(props.FormVariant),
				Disabled:    props.IsReadOnly,
				AutoResize:  !props.IsReadOnly,
			}).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = form.Item().Render(templ.WithChildren(ctx, templ_7745c5c3_Var26), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 75, "<!-- Practice -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var28 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Var29 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
				templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
				templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
				if !templ_7745c5c3_IsBuffer {
					defer func() {
						templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
						if templ_7745c5c3_Err == nil {
							templ_7745c5c3_Err = templ_7745c5c3_BufErr
						}
					}()
				}
				ctx = templ.InitializeContext(ctx)
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 76, "<span class=\"text-blue-600\">3.</span> ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				if props.FormVariant == "en" {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 77, "Practice")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				} else {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 78, "Praktika")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 79, " ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				if !props.IsReadOnly {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 80, "<span class=\"text-red-500\">*</span>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				return nil
			})
			templ_7745c5c3_Err = form.Label(form.LabelProps{
				For:   "review_practical",
				Class: "flex items-center gap-1",
			}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var29), templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 81, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = textarea.Textarea(textarea.Props{
				ID:          "review_practical",
				Name:        "review_practical",
				Value:       formData.ReviewPractical,
				Required:    !props.IsReadOnly,
				Class:       getTextareaClass(props.IsReadOnly),
				Rows:        getTextareaRowsLarge(props.IsReadOnly),
				Placeholder: getPracticalPlaceholder(props.FormVariant),
				Disabled:    props.IsReadOnly,
				AutoResize:  !props.IsReadOnly,
			}).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = form.Item().Render(templ.WithChildren(ctx, templ_7745c5c3_Var28), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 82, "</div><!-- Section 4-6 --><div class=\"border rounded-lg p-3 space-y-3\"><!-- Connection -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var30 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Var31 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
				templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
				templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
				if !templ_7745c5c3_IsBuffer {
					defer func() {
						templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
						if templ_7745c5c3_Err == nil {
							templ_7745c5c3_Err = templ_7745c5c3_BufErr
						}
					}()
				}
				ctx = templ.InitializeContext(ctx)
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 83, "<span class=\"text-blue-600\">4.</span> ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				if props.FormVariant == "en" {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 84, "Theory-Practice Link")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				} else {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 85, "Teorijos-praktikos ryšys")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 86, " ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				if !props.IsReadOnly {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 87, "<span class=\"text-red-500\">*</span>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				return nil
			})
			templ_7745c5c3_Err = form.Label(form.LabelProps{
				For:   "review_theory_practical_link",
				Class: "flex items-center gap-1",
			}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var31), templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 88, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = textarea.Textarea(textarea.Props{
				ID:          "review_theory_practical_link",
				Name:        "review_theory_practical_link",
				Value:       formData.ReviewTheoryPracticalLink,
				Required:    !props.IsReadOnly,
				Class:       getTextareaClass(props.IsReadOnly),
				Rows:        getTextareaRowsSmall(props.IsReadOnly),
				Placeholder: getTheoryPracticalLinkPlaceholder(props.FormVariant),
				Disabled:    props.IsReadOnly,
				AutoResize:  !props.IsReadOnly,
			}).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = form.Item().Render(templ.WithChildren(ctx, templ_7745c5c3_Var30), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 89, "<!-- Results -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var32 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Var33 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
				templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
				templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
				if !templ_7745c5c3_IsBuffer {
					defer func() {
						templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
						if templ_7745c5c3_Err == nil {
							templ_7745c5c3_Err = templ_7745c5c3_BufErr
						}
					}()
				}
				ctx = templ.InitializeContext(ctx)
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 90, "<span class=\"text-blue-600\">5.</span> ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				if props.FormVariant == "en" {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 91, "Results")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				} else {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 92, "Rezultatai")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 93, " ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				if !props.IsReadOnly {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 94, "<span class=\"text-red-500\">*</span>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				return nil
			})
			templ_7745c5c3_Err = form.Label(form.LabelProps{
				For:   "review_results",
				Class: "flex items-center gap-1",
			}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var33), templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 95, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = textarea.Textarea(textarea.Props{
				ID:          "review_results",
				Name:        "review_results",
				Value:       formData.ReviewResults,
				Required:    !props.IsReadOnly,
				Class:       getTextareaClass(props.IsReadOnly),
				Rows:        getTextareaRowsLarge(props.IsReadOnly),
				Placeholder: getResultsPlaceholder(props.FormVariant),
				Disabled:    props.IsReadOnly,
				AutoResize:  !props.IsReadOnly,
			}).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = form.Item().Render(templ.WithChildren(ctx, templ_7745c5c3_Var32), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 96, "<!-- Significance -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var34 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Var35 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
				templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
				templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
				if !templ_7745c5c3_IsBuffer {
					defer func() {
						templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
						if templ_7745c5c3_Err == nil {
							templ_7745c5c3_Err = templ_7745c5c3_BufErr
						}
					}()
				}
				ctx = templ.InitializeContext(ctx)
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 97, "<span class=\"text-gray-400\">6.</span> ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				if props.FormVariant == "en" {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 98, "Significance")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				} else {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 99, "Reikšmė")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 100, " <span class=\"text-xs text-gray-500 ml-1\">(optional)</span>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				return nil
			})
			templ_7745c5c3_Err = form.Label(form.LabelProps{
				For:   "review_practical_significance",
				Class: "flex items-center gap-1",
			}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var35), templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 101, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = textarea.Textarea(textarea.Props{
				ID:          "review_practical_significance",
				Name:        "review_practical_significance",
				Value:       formData.ReviewPracticalSignificance,
				Class:       getTextareaClass(props.IsReadOnly),
				Rows:        getTextareaRowsSmall(props.IsReadOnly),
				Placeholder: getPracticalSignificancePlaceholder(props.FormVariant),
				Disabled:    props.IsReadOnly,
				AutoResize:  !props.IsReadOnly,
			}).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = form.Item().Render(templ.WithChildren(ctx, templ_7745c5c3_Var34), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 102, "</div><!-- Evaluation section --><div class=\"border rounded-lg p-3\"><div class=\"grid grid-cols-1 md:grid-cols-3 gap-3\"><!-- Language -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var36 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Var37 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
				templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
				templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
				if !templ_7745c5c3_IsBuffer {
					defer func() {
						templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
						if templ_7745c5c3_Err == nil {
							templ_7745c5c3_Err = templ_7745c5c3_BufErr
						}
					}()
				}
				ctx = templ.InitializeContext(ctx)
				if props.FormVariant == "en" {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 103, "Language")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				} else {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 104, "Kalba")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 105, " ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				if !props.IsReadOnly {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 106, "<span class=\"text-red-500\">*</span>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				return nil
			})
			templ_7745c5c3_Err = form.Label(form.LabelProps{
				For: "review_language",
			}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var37), templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 107, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = textarea.Textarea(textarea.Props{
				ID:          "review_language",
				Name:        "review_language",
				Value:       formData.ReviewLanguage,
				Required:    !props.IsReadOnly,
				Class:       getTextareaClass(props.IsReadOnly),
				Rows:        getTextareaRowsSmall(props.IsReadOnly),
				Placeholder: getLanguagePlaceholder(props.FormVariant),
				Disabled:    props.IsReadOnly,
				AutoResize:  !props.IsReadOnly,
			}).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = form.Item().Render(templ.WithChildren(ctx, templ_7745c5c3_Var36), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 108, "<!-- Pros -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var38 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Var39 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
				templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
				templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
				if !templ_7745c5c3_IsBuffer {
					defer func() {
						templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
						if templ_7745c5c3_Err == nil {
							templ_7745c5c3_Err = templ_7745c5c3_BufErr
						}
					}()
				}
				ctx = templ.InitializeContext(ctx)
				if props.FormVariant == "en" {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 109, "Pros")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				} else {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 110, "Privalumai")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 111, " ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				if !props.IsReadOnly {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 112, "<span class=\"text-red-500\">*</span>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				return nil
			})
			templ_7745c5c3_Err = form.Label(form.LabelProps{
				For: "review_pros",
			}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var39), templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 113, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = textarea.Textarea(textarea.Props{
				ID:          "review_pros",
				Name:        "review_pros",
				Value:       formData.ReviewPros,
				Required:    !props.IsReadOnly,
				Class:       getTextareaClass(props.IsReadOnly),
				Rows:        getTextareaRowsSmall(props.IsReadOnly),
				Placeholder: getProsPlaceholder(props.FormVariant),
				Disabled:    props.IsReadOnly,
				AutoResize:  !props.IsReadOnly,
			}).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = form.Item().Render(templ.WithChildren(ctx, templ_7745c5c3_Var38), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 114, "<!-- Cons -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var40 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Var41 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
				templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
				templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
				if !templ_7745c5c3_IsBuffer {
					defer func() {
						templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
						if templ_7745c5c3_Err == nil {
							templ_7745c5c3_Err = templ_7745c5c3_BufErr
						}
					}()
				}
				ctx = templ.InitializeContext(ctx)
				if props.FormVariant == "en" {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 115, "Cons")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				} else {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 116, "Trūkumai")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 117, " ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				if !props.IsReadOnly {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 118, "<span class=\"text-red-500\">*</span>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				return nil
			})
			templ_7745c5c3_Err = form.Label(form.LabelProps{
				For: "review_cons",
			}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var41), templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 119, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = textarea.Textarea(textarea.Props{
				ID:          "review_cons",
				Name:        "review_cons",
				Value:       formData.ReviewCons,
				Required:    !props.IsReadOnly,
				Class:       getTextareaClass(props.IsReadOnly),
				Rows:        getTextareaRowsSmall(props.IsReadOnly),
				Placeholder: getConsPlaceholder(props.FormVariant),
				Disabled:    props.IsReadOnly,
				AutoResize:  !props.IsReadOnly,
			}).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = form.Item().Render(templ.WithChildren(ctx, templ_7745c5c3_Var40), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 120, "</div><!-- Questions -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var42 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Var43 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
				templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
				templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
				if !templ_7745c5c3_IsBuffer {
					defer func() {
						templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
						if templ_7745c5c3_Err == nil {
							templ_7745c5c3_Err = templ_7745c5c3_BufErr
						}
					}()
				}
				ctx = templ.InitializeContext(ctx)
				if props.FormVariant == "en" {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 121, "Questions")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				} else {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 122, "Klausimai")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 123, " ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				if !props.IsReadOnly {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 124, "<span class=\"text-red-500\">*</span>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				return nil
			})
			templ_7745c5c3_Err = form.Label(form.LabelProps{
				For: "review_questions",
			}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var43), templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 125, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = textarea.Textarea(textarea.Props{
				ID:          "review_questions",
				Name:        "review_questions",
				Value:       formData.ReviewQuestions,
				Required:    !props.IsReadOnly,
				Class:       getTextareaClass(props.IsReadOnly),
				Rows:        getTextareaRowsLarge(props.IsReadOnly),
				Placeholder: getQuestionsPlaceholder(props.FormVariant),
				Disabled:    props.IsReadOnly,
				AutoResize:  !props.IsReadOnly,
			}).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = form.Item(form.ItemProps{Class: "mt-3"}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var42), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 126, "<!-- Grade -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var44 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 127, "<div class=\"flex items-center justify-between\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Var45 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
				templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
				templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
				if !templ_7745c5c3_IsBuffer {
					defer func() {
						templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
						if templ_7745c5c3_Err == nil {
							templ_7745c5c3_Err = templ_7745c5c3_BufErr
						}
					}()
				}
				ctx = templ.InitializeContext(ctx)
				if props.FormVariant == "en" {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 128, "Grade")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				} else {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 129, "Įvertinimas")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 130, " ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				if !props.IsReadOnly {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 131, "<span class=\"text-red-500\">*</span>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				return nil
			})
			templ_7745c5c3_Err = form.Label(form.LabelProps{
				For: "grade",
			}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var45), templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 132, "<div class=\"flex items-center gap-2\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = input.Input(input.Props{
				ID:       "grade",
				Type:     input.TypeNumber,
				Name:     "grade",
				Value:    fmt.Sprintf("%.1f", formData.Grade),
				Required: !props.IsReadOnly,
				Class:    getInputClass(props.IsReadOnly),
				Disabled: props.IsReadOnly,
				Attributes: templ.Attributes{
					"min":  "1",
					"max":  "10",
					"step": "0.5",
				},
			}).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 133, "<span class=\"text-sm text-gray-600\">/10</span></div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = form.Item(form.ItemProps{Class: "mt-3 pt-3 border-t"}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var44), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 134, "</div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func ReviewerModalScripts(accessToken string, isReadOnly bool) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var46 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var46 == nil {
			templ_7745c5c3_Var46 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 135, "<script>\r\n        (function() {\r\n            // Store access token\r\n            const reviewerAccessToken = ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var47, templ_7745c5c3_Err := templruntime.ScriptContentOutsideStringLiteral(accessToken)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/templates/reviewer_form_compact.templ`, Line: 587, Col: 54}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var47)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 136, ";\r\n            const isReadOnly = ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var48, templ_7745c5c3_Err := templruntime.ScriptContentOutsideStringLiteral(isReadOnly)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/templates/reviewer_form_compact.templ`, Line: 588, Col: 44}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var48)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 137, ";\r\n\r\n            // Auto-resize textareas for read-only mode\r\n            if (isReadOnly) {\r\n                const autoResizeTextarea = function(textarea) {\r\n                    // Store original styles\r\n                    const originalHeight = textarea.style.height;\r\n                    const originalOverflow = textarea.style.overflow;\r\n\r\n                    // Reset to get accurate measurement\r\n                    textarea.style.height = 'auto';\r\n                    textarea.style.overflow = 'hidden';\r\n\r\n                    // Calculate the needed height\r\n                    const scrollHeight = textarea.scrollHeight;\r\n                    const lineHeight = parseInt(window.getComputedStyle(textarea).lineHeight) || 20;\r\n                    const paddingTop = parseInt(window.getComputedStyle(textarea).paddingTop) || 0;\r\n                    const paddingBottom = parseInt(window.getComputedStyle(textarea).paddingBottom) || 0;\r\n\r\n                    // Set minimum height to at least one line\r\n                    const minHeight = lineHeight + paddingTop + paddingBottom;\r\n                    const finalHeight = Math.max(scrollHeight, minHeight);\r\n\r\n                    // Apply the calculated height\r\n                    textarea.style.height = finalHeight + 'px';\r\n                    textarea.style.minHeight = finalHeight + 'px';\r\n                    textarea.style.overflow = 'hidden';\r\n                    textarea.style.resize = 'none';\r\n                };\r\n\r\n                // Function to resize all textareas\r\n                const resizeAllTextareas = function() {\r\n                    const textareas = document.querySelectorAll('textarea[disabled]');\r\n                    textareas.forEach(autoResizeTextarea);\r\n                };\r\n\r\n                // Initial resize with multiple attempts to ensure proper rendering\r\n                const initResize = function() {\r\n                    resizeAllTextareas();\r\n\r\n                    // Additional resize attempts to handle dynamic content loading\r\n                    setTimeout(resizeAllTextareas, 50);\r\n                    setTimeout(resizeAllTextareas, 100);\r\n                    setTimeout(resizeAllTextareas, 200);\r\n                    setTimeout(resizeAllTextareas, 300);\r\n                };\r\n\r\n                // Run initial resize\r\n                initResize();\r\n\r\n                // Resize on window resize\r\n                window.addEventListener('resize', resizeAllTextareas);\r\n\r\n                // Also observe for content changes\r\n                const observer = new MutationObserver(function(mutations) {\r\n                    mutations.forEach(function(mutation) {\r\n                        if (mutation.type === 'childList' || mutation.type === 'characterData') {\r\n                            setTimeout(resizeAllTextareas, 10);\r\n                        }\r\n                    });\r\n                });\r\n\r\n                observer.observe(document.body, {\r\n                    childList: true,\r\n                    subtree: true,\r\n                    characterData: true\r\n                });\r\n            }\r\n\r\n            // Auto-save functionality - encapsulated in function scope\r\n            let autoSaveTimer;\r\n            let hasUnsavedChanges = false;\r\n            const AUTOSAVE_DELAY = 3000; // 3 seconds\r\n\r\n            // Modal opening logic\r\n            (function() {\r\n                requestAnimationFrame(function() {\r\n                    requestAnimationFrame(function() {\r\n                        const modal = document.getElementById('reviewer-modal');\r\n                        if (modal) {\r\n                            if (window.modalState && window.modalState.openModalId) {\r\n                                const existingModal = document.getElementById(window.modalState.openModalId);\r\n                                if (existingModal && existingModal !== modal) {\r\n                                    existingModal.style.display = 'none';\r\n                                    existingModal.classList.add('opacity-0');\r\n                                }\r\n                            }\r\n\r\n                            if (!window.modalState) {\r\n                                window.modalState = { openModalId: null };\r\n                            }\r\n\r\n                            window.modalState.openModalId = 'reviewer-modal';\r\n                            document.body.style.overflow = 'hidden';\r\n                            modal.style.display = 'flex';\r\n                            modal.offsetHeight;\r\n                            modal.classList.remove('opacity-0', 'hidden');\r\n                            modal.classList.add('opacity-100');\r\n\r\n                            const content = modal.querySelector('[data-modal-content]');\r\n                            if (content) {\r\n                                content.classList.remove('scale-95', 'opacity-0');\r\n                                content.classList.add('scale-100', 'opacity-100');\r\n                            }\r\n\r\n                            // Initialize auto-save listeners\r\n                            if (!isReadOnly) {\r\n                                initializeAutoSave();\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n            })();\r\n\r\n            function initializeAutoSave() {\r\n                const form = document.getElementById('compact-reviewer-form');\r\n                if (!form || form.querySelector('[disabled]')) return;\r\n\r\n                const fields = form.querySelectorAll('.auto-save-field');\r\n                fields.forEach(field => {\r\n                    field.addEventListener('input', handleFieldChange);\r\n                    field.addEventListener('change', handleFieldChange);\r\n                });\r\n            }\r\n\r\n            function handleFieldChange() {\r\n                hasUnsavedChanges = true;\r\n                clearTimeout(autoSaveTimer);\r\n                updateSaveStatus('pending');\r\n                autoSaveTimer = setTimeout(() => {\r\n                    autoSave();\r\n                }, AUTOSAVE_DELAY);\r\n            }\r\n\r\n            function updateSaveStatus(status) {\r\n                const saveIcon = document.getElementById('save-icon');\r\n                const saveText = document.getElementById('save-text');\r\n                const lastSaved = document.getElementById('last-saved');\r\n\r\n                switch(status) {\r\n                    case 'pending':\r\n                        saveIcon?.classList.remove('hidden');\r\n                        saveText.textContent = 'Changes detected...';\r\n                        saveText.classList.add('text-yellow-600');\r\n                        break;\r\n                    case 'saving':\r\n                        saveIcon?.classList.remove('hidden');\r\n                        saveText.textContent = 'Saving...';\r\n                        saveText.classList.add('text-blue-600');\r\n                        saveText.classList.remove('text-yellow-600', 'text-green-600');\r\n                        break;\r\n                    case 'saved':\r\n                        saveIcon?.classList.remove('hidden');\r\n                        saveText.textContent = 'All changes saved';\r\n                        saveText.classList.remove('text-blue-600', 'text-yellow-600');\r\n                        saveText.classList.add('text-green-600');\r\n                        const now = new Date();\r\n                        lastSaved.textContent = `Last saved: ${now.toLocaleTimeString()}`;\r\n                        hasUnsavedChanges = false;\r\n                        break;\r\n                    case 'error':\r\n                        saveIcon?.classList.add('hidden');\r\n                        saveText.textContent = 'Error saving';\r\n                        saveText.classList.add('text-red-600');\r\n                        break;\r\n                }\r\n            }\r\n\r\n            function autoSave() {\r\n                const form = document.getElementById('compact-reviewer-form');\r\n                const studentId = form.dataset.studentId;\r\n\r\n                document.getElementById('is_draft').value = 'true';\r\n                updateSaveStatus('saving');\r\n\r\n                let submitUrl;\r\n                if (reviewerAccessToken) {\r\n                    submitUrl = `/reviewer/${reviewerAccessToken}/student/${studentId}/review/submit`;\r\n                } else {\r\n                    submitUrl = `/reviewer-report/${studentId}/save-draft`;\r\n                }\r\n\r\n                const formData = new FormData(form);\r\n\r\n                htmx.ajax('POST', submitUrl, {\r\n                    values: Object.fromEntries(formData),\r\n                    target: '#modal-result',\r\n                    swap: 'innerHTML'\r\n                }).then(() => {\r\n                    updateSaveStatus('saved');\r\n                }).catch(() => {\r\n                    updateSaveStatus('error');\r\n                });\r\n            }\r\n\r\n            // Make functions available in window scope with unique names\r\n            window.reviewerSaveDraft = function() {\r\n                const form = document.getElementById('compact-reviewer-form');\r\n                const studentId = form.dataset.studentId;\r\n\r\n                document.getElementById('is_draft').value = 'true';\r\n                const formData = new FormData(form);\r\n                updateSaveStatus('saving');\r\n\r\n                let submitUrl;\r\n                if (reviewerAccessToken) {\r\n                    submitUrl = `/reviewer/${reviewerAccessToken}/student/${studentId}/review/submit`;\r\n                } else {\r\n                    submitUrl = `/reviewer-report/${studentId}/save-draft`;\r\n                }\r\n\r\n                htmx.ajax('POST', submitUrl, {\r\n                    values: Object.fromEntries(formData),\r\n                    target: '#modal-result',\r\n                    swap: 'innerHTML'\r\n                }).then(() => {\r\n                    updateSaveStatus('saved');\r\n                    setTimeout(() => {\r\n                        showSuccessMessage('Draft saved successfully!');\r\n                    }, 500);\r\n                });\r\n            };\r\n\r\n            window.reviewerValidateAndSubmit = function() {\r\n                document.getElementById('is_draft').value = 'false';\r\n                return validateReviewerForm();\r\n            };\r\n\r\n            function validateReviewerForm() {\r\n                const form = document.getElementById('compact-reviewer-form');\r\n                let isValid = true;\r\n\r\n                document.querySelectorAll('[id$=\"-error\"]').forEach(el => el.classList.add('hidden'));\r\n\r\n                const requiredFields = [\r\n                    'reviewer_personal_details',\r\n                    'review_goals',\r\n                    'review_theory',\r\n                    'review_practical',\r\n                    'review_theory_practical_link',\r\n                    'review_results',\r\n                    'review_language',\r\n                    'review_pros',\r\n                    'review_cons',\r\n                    'review_questions'\r\n                ];\r\n\r\n                for (const fieldName of requiredFields) {\r\n                    const field = form.querySelector(`[name=\"${fieldName}\"]`);\r\n                    if (!field || !field.value.trim()) {\r\n                        isValid = false;\r\n                        field?.classList.add('border-red-500');\r\n                        if (!field?.closest('.border')?.querySelector('.text-red-500')) {\r\n                            field?.focus();\r\n                            break;\r\n                        }\r\n                    } else {\r\n                        field?.classList.remove('border-red-500');\r\n                    }\r\n                }\r\n\r\n                const gradeField = form.querySelector('[name=\"grade\"]');\r\n                const grade = parseFloat(gradeField?.value || '0');\r\n                if (!grade || grade < 1 || grade > 10) {\r\n                    isValid = false;\r\n                    gradeField?.classList.add('border-red-500');\r\n                    document.getElementById('grade-error')?.classList.remove('hidden');\r\n                } else {\r\n                    gradeField?.classList.remove('border-red-500');\r\n                }\r\n\r\n                return isValid;\r\n            }\r\n\r\n            function showSuccessMessage(message) {\r\n                const result = document.getElementById('modal-result');\r\n                result.innerHTML = `\r\n                    <div class=\"bg-green-50 border border-green-200 text-green-800 px-4 py-3 rounded\">\r\n                        <div class=\"flex items-center\">\r\n                            <svg class=\"h-5 w-5 text-green-400 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n                            </svg>\r\n                            <span>${message}</span>\r\n                        </div>\r\n                    </div>\r\n                `;\r\n\r\n                setTimeout(() => {\r\n                    result.innerHTML = '';\r\n                }, 3000);\r\n            }\r\n\r\n            // Event listeners\r\n            const beforeUnloadHandler = function(e) {\r\n                if (hasUnsavedChanges && !isReadOnly) {\r\n                    e.preventDefault();\r\n                    e.returnValue = '';\r\n                }\r\n            };\r\n            window.addEventListener('beforeunload', beforeUnloadHandler);\r\n\r\n            const htmxAfterRequestHandler = function(evt) {\r\n                if (evt.detail.successful && (\r\n                    evt.target.closest('#modal-result') ||\r\n                    evt.detail.xhr.getResponseHeader('HX-Trigger') === 'reviewerReportSaved'\r\n                )) {\r\n                    hasUnsavedChanges = false;\r\n\r\n                    const isDraft = document.getElementById('is_draft').value === 'true';\r\n\r\n                    if (!isDraft) {\r\n                        const modal = document.getElementById('reviewer-modal');\r\n                        if (modal && window.modalState) {\r\n                            setTimeout(() => {\r\n                                window.modalState.openModalId = null;\r\n                                document.body.style.overflow = '';\r\n                                window.location.reload();\r\n                            }, 300);\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            document.addEventListener('htmx:afterRequest', htmxAfterRequestHandler);\r\n\r\n            const keydownHandler = function(e) {\r\n                if (e.key === 'Escape' && window.modalState && window.modalState.openModalId === 'reviewer-modal') {\r\n                    if (hasUnsavedChanges && !isReadOnly) {\r\n                        if (confirm('You have unsaved changes. Are you sure you want to close?')) {\r\n                            closeReviewerModal();\r\n                        }\r\n                    } else {\r\n                        closeReviewerModal();\r\n                    }\r\n                }\r\n            };\r\n            document.addEventListener('keydown', keydownHandler);\r\n\r\n            // Store cleanup function\r\n            window.reviewerModalCleanup = function() {\r\n                window.removeEventListener('beforeunload', beforeUnloadHandler);\r\n                document.removeEventListener('htmx:afterRequest', htmxAfterRequestHandler);\r\n                document.removeEventListener('keydown', keydownHandler);\r\n                clearTimeout(autoSaveTimer);\r\n            };\r\n        })();\r\n\r\n        // Global functions that don't conflict\r\n        window.closeReviewerModal = function() {\r\n            // Call cleanup if it exists\r\n            if (window.reviewerModalCleanup) {\r\n                window.reviewerModalCleanup();\r\n            }\r\n\r\n            const modal = document.getElementById('reviewer-modal');\r\n            if (modal) {\r\n                modal.classList.remove('opacity-100');\r\n                modal.classList.add('opacity-0');\r\n                setTimeout(() => {\r\n                    modal.style.display = 'none';\r\n                    document.body.style.overflow = '';\r\n                    if (window.modalState) {\r\n                        window.modalState.openModalId = null;\r\n                    }\r\n\r\n                    // Clean up modal container\r\n                    const modalContainer = document.getElementById('modal-container');\r\n                    if (modalContainer) {\r\n                        modalContainer.innerHTML = '';\r\n                        modalContainer.style.display = 'none';\r\n                    }\r\n                }, 300);\r\n            }\r\n        };\r\n    </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

// Helper functions
func getReviewerPlaceholder(variant string) string {
	if variant == "en" {
		return "Name, workplace, position..."
	}
	return "Vardas pavardė, darbovietė, pareigos..."
}

func getGoalsPlaceholder(variant string) string {
	if variant == "en" {
		return "Evaluate how well the thesis goals and tasks are formulated..."
	}
	return "Įvertinkite, kaip gerai suformuluoti darbo tikslai ir uždaviniai..."
}

func getTheoryPlaceholder(variant string) string {
	if variant == "en" {
		return "Assess the theoretical foundation and literature review..."
	}
	return "Įvertinkite teorinį pagrindą ir literatūros apžvalgą..."
}

func getPracticalPlaceholder(variant string) string {
	if variant == "en" {
		return "Evaluate the research methodology and implementation..."
	}
	return "Įvertinkite tyrimo metodiką ir įgyvendinimą..."
}

func getTheoryPracticalLinkPlaceholder(variant string) string {
	if variant == "en" {
		return "How well does the practical part relate to the theory..."
	}
	return "Kaip gerai praktinė dalis siejasi su teorija..."
}

func getResultsPlaceholder(variant string) string {
	if variant == "en" {
		return "Evaluate the results and conclusions..."
	}
	return "Įvertinkite rezultatus ir išvadas..."
}

func getPracticalSignificancePlaceholder(variant string) string {
	if variant == "en" {
		return "Describe the practical applications and significance..."
	}
	return "Aprašykite praktinius pritaikymus ir reikšmę..."
}

func getLanguagePlaceholder(variant string) string {
	if variant == "en" {
		return "Evaluate the language quality and clarity..."
	}
	return "Įvertinkite kalbos kokybę ir aiškumą..."
}

func getProsPlaceholder(variant string) string {
	if variant == "en" {
		return "List the main strengths of the thesis..."
	}
	return "Išvardinkite pagrindinius darbo privalumus..."
}

func getConsPlaceholder(variant string) string {
	if variant == "en" {
		return "List the main weaknesses or areas for improvement..."
	}
	return "Išvardinkite pagrindinius trūkumus ar tobulintinas sritis..."
}

func getQuestionsPlaceholder(variant string) string {
	if variant == "en" {
		return "Questions for the student during defense..."
	}
	return "Klausimai studentui gynimo metu..."
}

// Updated helper functions for conditional styling
func getModalBodyStyle(isReadOnly bool) string {
	return "" // Let the inline styles handle it
}

func getTextareaClass(isReadOnly bool) string {
	if isReadOnly {
		return "text-sm w-full read-only-textarea !min-h-0"
	}
	return "text-sm w-full auto-save-field"
}

func getTextareaRowsSmall(isReadOnly bool) int {
	if isReadOnly {
		return 1 // Start with 1 row, let auto-resize handle the rest
	}
	return 2
}

func getTextareaRowsLarge(isReadOnly bool) int {
	if isReadOnly {
		return 1 // Start with 1 row, let auto-resize handle the rest
	}
	return 3
}

func getInputClass(isReadOnly bool) string {
	if isReadOnly {
		return "w-20 text-center border-transparent bg-transparent"
	}
	return "w-20 text-center auto-save-field"
}

var _ = templruntime.GeneratedTemplate
